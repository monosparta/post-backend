openapi: 3.0.3
info:
  title: Post API
  description: |-
    This is a simple post API, including creating, reading, updating and deleting posts.
  version: 1.0.0
tags:
  - name: post
    description: Everything about your post
paths:
  /post:
    post:
      tags:
        - post
      summary: Add a new Post
      description: Add a new Post
      requestBody:
        $ref: '#/components/requestBodies/AddPost'
      responses:
        '201':
          description: Successful Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Incorrect format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - bearerAuth: []
  /posts:
    get:
      tags:
        - post
      summary: Get all posts
      description: Get all posts ordered by created date
      responses:
        '200':
          description: successful operation & a list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - bearerAuth: []
  /post/{postId}:
    get:
      tags:
        - post
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: postId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - bearerAuth: []
    put:
      tags:
        - post
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      parameters:
        - name: postId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/ModifyPost'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - bearerAuth: []
    delete:
      tags:
        - post
      summary: Deletes a pet
      description: delete a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: postId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - bearerAuth: []
 
components:
  schemas:
    Post:
      type: object
      properties:
        uuid: 
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PostRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
    GenericResponse:
      type: object
      properties:
        message:
          type: string
  requestBodies:
    AddPost:
      description: Post object to be added
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRequest'
    ModifyPost:
      description: Post object to be modified
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRequest'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer