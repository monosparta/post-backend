openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api
tags:
  - name: post
    description: Everything about your post
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /post:
    post:
      tags:
        - post
      summary: Add a new Post
      description: Add a new Post
      requestBody:
        $ref: '#/components/requestBodies/AddPost'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                # $ref: '#/components/schemas/Post'
                  type: object
                  properties:
                    message:
                      type: string      
        '400':
          description: Incorrect format
          content:
            application/json:
              schema:
                # $ref: '#/components/schemas/Post'
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: server error
          content:
            application/json:
              schema:
                # $ref: '#/components/schemas/Post'
                type: object
                properties:
                  message:
                    type: string
      security:
        - bearerAuth: []
  /posts:
    get:
      tags:
        - post
      summary: Get all posts
      description: Get all posts ordered by created date
      responses:
        '200':
          description: successful operation & a list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '500':
          description: Internal server error
      security:
        - bearerAuth: []
  /post/{postId}:
    get:
      tags:
        - post
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: postId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - bearerAuth: []
    put:
      tags:
        - post
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      parameters:
        - name: postId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/ModifyPost'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - bearerAuth: []
    delete:
      tags:
        - post
      summary: Deletes a pet
      description: delete a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: postId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - bearerAuth: []
 
components:
  schemas:
    Post:
      type: object
      properties:
        uuid: 
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PostRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
    GenericResponse:
      type: object
      properties:
        message:
          type: string
  requestBodies:
    AddPost:
      description: Post object to be added
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRequest'
    ModifyPost:
      description: Post object to be modified
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRequest'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer