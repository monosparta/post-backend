openapi: 3.0.3
info:
  title: Post API
  description: |-
    This is a simple post API, including creating, reading, updating and deleting posts.
  version: 1.0.0
tags:
  - name: post
    description: Everything about your post
paths:
  /post:
    post:
      tags:
        - post
      summary: Add a new Post
      description: Add a new Post
      requestBody:
        $ref: '#/components/requestBodies/AddPost'
      responses:
        '201':
          description: Successful created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
              example:
                success: true
                statusCode: 201
                message: 'Post created.'
                data:
                  post_id: '27565488-ab14-431d-93f9-867d7292578d'
        '400':
          description: Incorrect format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseWithError'
              examples:
                'title missing':
                  value:
                    success: false
                    statusCode: 400
                    errorCode: 400
                    message: 'clientResponse.badRequest.invalid_parameter'
                    errors:
                      title: ['The title field is required.']
                'content missing':
                  value:
                    success: false
                    statusCode: 400
                    errorCode: 400
                    message: 'clientResponse.badRequest.invalid_parameter'
                    errors:
                      content: ['The content field is required.']
                'user_id missing':
                  value:
                    success: false
                    statusCode: 400
                    errorCode: 400
                    message: 'clientResponse.badRequest.invalid_parameter'
                    errors:
                      user_id: 
                        - 'The user_id field is required.'
                'user_id invalid':
                  value:
                    success: false
                    statusCode: 400
                    errorCode: 400
                    message: 'clientResponse.badRequest.invalid_parameter'
                    errors:
                      user_id: 
                        - 'The user id must be a valid UUID.'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 500
                errorCode: 0
                message: 'Internal Server Error'
                
      security:
        - bearerAuth: []
  /posts:
    get:
      tags:
        - post
      summary: Get all Posts
      description: Get all Posts ordered by created date
      responses:
        '200':
          description: Successful operation & a list of Posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  statusCode:
                    type: number
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
              example:
                success: true
                statusCode: 200
                message: 'Query success.'
                data: 
                  - post_id: '27565488-ab14-431d-93f9-867d7292578d'
                    title: 'Ut omnis ullam neque omnis architecto quos.'
                    content: 'Sunt esse consequuntur similique ea nemo unde nemo. Ratione fugit sit occaecati. Sit ex molestias illum eos vero est quis.'
                    created_at: '2022-10-26 17:43:26'
                    updated_at: '2022-10-26 17:43:26'
                    user:
                      user_id: '95a3ca67-d5ff-4ce4-b4d1-4f77246ebe88'
                      name: 'Cynthia Collins'
                  - post_id: 'a17dcfe6-91e9-4fe7-9ced-40a0429a318b'
                    title: 'Ipsam nihil et voluptatem maxime suscipit voluptatem.'
                    content: 'Mollitia voluptatem magni incidunt quis. Aut omnis earum sit mollitia minus.'
                    created_at: '2022-10-26 17:43:26'
                    updated_at: '2022-10-26 17:43:26'
                    user:
                      user_id: '5489b03a-b475-482c-a0e2-d2b46915f509'
                      name: 'Dr. Juliet Nitzsche V'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 500
                errorCode: 0
                message: 'Internal Server Error'
      security:
        - bearerAuth: []
  /author/{user_id}/posts:
    get:
      tags:
        - post
      summary: Find Post by UserId
      description: Returns a single Post
      parameters:
        - name: user_id
          in: path
          description: ID of Post to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  statusCode:
                    type: number
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
              example:
                success: true
                statusCode: 200
                message: "Query success."
                data:
                  user_id: '5489b03a-b475-482c-a0e2-d2b46915f509'
                  name: 'Dr. Juliet Nitzsche V'
                  posts:
                    - post_id: 'a17dcfe6-91e9-4fe7-9ced-40a0429a318b'
                      title: 'Ipsam nihil et voluptatem maxime suscipit voluptatem.'
                      content: 'Mollitia voluptatem magni incidunt quis. Aut omnis earum sit mollitia minus.'
                      created_at: '2022-10-26 17:43:26'
                      updated_at: '2022-10-26 17:43:26'
                    - post_id: '4a4c93ca-9327-4376-9b02-f304039ffe08'
                      title: 'Tempora eum sit sapiente mollitia similique vitae.'
                      content: 'Aut corporis vero aut consequuntur doloribus qui vel. Ipsam quae est aliquid commodi voluptas omnis alias.'
                      created_at: '2022-10-26 17:43:26'
                      updated_at: '2022-10-26 17:43:26'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 404
                errorCode: 0
                message: 'Requested resource not found'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 500
                errorCode: 0
                message: 'Internal Server Error'
      security:
        - bearerAuth: []
  /post/{post_id}:
    get:
      tags:
        - post
      summary: Find Post by PostId
      description: Returns a single Post
      parameters:
        - name: post_id
          in: path
          description: ID of Post to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  statusCode:
                    type: number
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Post'
              example:
                success: true
                statusCode: 200
                message: 'Query success.'
                data: 
                  post_id: '27565488-ab14-431d-93f9-867d7292578d'
                  title: 'Ut omnis ullam neque omnis architecto quos.'
                  content: 'Sunt esse consequuntur similique ea nemo unde nemo. Ratione fugit sit occaecati. Sit ex molestias illum eos vero est quis.'
                  created_at: '2022-10-26 17:43:26'
                  updated_at: '2022-10-26 17:43:26'
                  user:
                    user_id: '95a3ca67-d5ff-4ce4-b4d1-4f77246ebe88'
                    name: 'Cynthia Collins'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 404
                errorCode: 0
                message: 'Requested resource not found'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 500
                errorCode: 0
                message: 'Internal Server Error'
      security:
        - bearerAuth: []
    put:
      tags:
        - post
      summary: Update an existing Post
      description: Update an existing Post by Id
      parameters:
        - name: post_id
          in: path
          description: ID of Post to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/PutModifyPost'
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
              example:
                success: true
                statusCode: 201
                message: 'Post updated.'
                data:
                  post_id: '27565488-ab14-431d-93f9-867d7292578d'
        '400':
          description: Incorrect format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseWithError'
              examples:
                'title missing':
                  value:
                    success: false
                    statusCode: 400
                    errorCode: 400
                    message: 'clientResponse.badRequest.invalid_parameter'
                    errors:
                      title: 
                        - 'The title field is required.'
                'content missing':
                  value:
                    success: false
                    statusCode: 400
                    errorCode: 400
                    message: 'clientResponse.badRequest.invalid_parameter'
                    errors:
                      content: 
                        - 'The content field is required.'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 404
                errorCode: 0
                message: 'Requested resource not found'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 500
                errorCode: 0
                message: 'Internal Server Error'
      security:
        - bearerAuth: []
    delete:
      tags:
        - post
      summary: Deletes a Post
      description: Delete a Post
      parameters:
        - name: post_id
          in: path
          description: PostId to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: true
                statusCode: 200
                message: 'Post deleted.'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 404
                errorCode: 0
                message: 'Requested resource not found'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                success: false
                statusCode: 500
                errorCode: 0
                message: 'Internal Server Error'
      security:
        - bearerAuth: []
components:
  schemas:
    Post:
      type: object
      properties:
        post_id: 
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          type: object
          properties:
            user_id:
              type: string
              format: uuid
            name:
              type: string
    PostResponse:
      type: object
      properties:
        success:
          type: boolean
          default: true
        statusCode:
          type: number
        message:
          type: string
        data:
          type: object
          properties:
            post_id: 
              type: string
              format: uuid
    User:
      type: object
      properties:
        user_id: 
          type: string
          format: uuid
        name:
          type: string
        post:
          type: array
          items:
            type: object
            properties:
              post_id:
                type: string
                format: uuid
              title:
                type: string
              content:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
    PostRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        user_id:
          type: string
          format: uuid
    PutRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
    GenericResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        statusCode:
          type: number
        errorCode:
          type: number
        message:
          type: string
    GenericResponseWithError:
      type: object
      properties:
        success:
          type: boolean
          default: false
        statusCode:
          type: number
        errorCode:
          type: number
        message:
          type: string
        errors:
          type: object
  requestBodies:
    AddPost:
      description: Post object to be added
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRequest'
    ModifyPost:
      description: Post object to be modified
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRequest'
    PutModifyPost:
      description: Post object to be modified
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PutRequest'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer